/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
body,html{height:100%}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;font-size:16px}body{margin:0;background:#f2f6ff;font-family:"GoogleSans",sans-serif;color:#7f8da0;overflow-x:hidden}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0;color:#7f8da0;text-decoration:none;-webkit-transition:.15s ease-out;-o-transition:.15s ease-out;transition:.15s ease-out}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0;max-width:100%;height:auto}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font:1em monospace,monospace}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}*,legend,td,th{padding:0}@font-face{font-family:"GoogleSans";src:local("GoogleSans-Regular"),local("GoogleSans-Regular"),url(../font/GoogleSans-Regular.woff2) format("woff2"),url(../font/GoogleSans-Regular.woff) format("woff");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"GoogleSans";src:local("GoogleSans-Bold"),local("GoogleSans-Bold"),url(../font/GoogleSans-Bold.woff2) format("woff2"),url(../font/GoogleSans-Bold.woff) format("woff");font-weight:700;font-style:normal;font-display:swap}*{margin:0;-webkit-box-sizing:border-box;box-sizing:border-box}.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:100%}.container{margin:0 auto;padding:0 15px;max-width:1440px;width:100%}a:hover{color:#23233c}ul{list-style:none}.section__title{font-size:3.125rem;line-height:4rem;font-weight:400;color:#23233c;margin-bottom:72px}.section__text{max-width:615px;font-size:1.5625rem;line-height:1.75rem}.btn{font-size:1.25rem;font-weight:700;padding:21px 68px}.btn_black{background:#23233c;color:#fff;border-radius:10px}.btn_black:hover{background:#49497c;color:#fff}.row{display:-webkit-box;display:-ms-flexbox;display:flex}.col{padding:0 15px}.text-green{color:#6cc57c}.text-red{color:#ee6a6e}.text-black{color:#23233c}.text-decor{position:relative}.text-decor::after{background:#23233c;content:"";position:absolute;left:0;top:-28px;width:62px;height:8px;border-radius:5px}.header{position:absolute;top:40px;width:100%;z-index:99}.header__wrapper{display:grid;grid-template-columns:auto 1fr auto;justify-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__navigation{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;width:100%;-webkit-transition:.2s ease-out;-o-transition:.2s ease-out;transition:.2s ease-out}.logo,.platforms__link svg path{-webkit-transition:.1s ease-out;-o-transition:.1s ease-out;transition:.1s ease-out}.logo:hover{opacity:.7}.main-nav__link:not(:last-child){margin-right:66px}.authorization{margin-left:150px}.authorization__link{color:#23233c}.authorization__link:not(:last-child){margin-right:54px}.authorization__link:hover{color:#6cc57c}.hamburger{display:none;cursor:pointer;background:0 0;border:0}.hamburger__line{background:#23233c;display:block;width:26px;height:3px;border-radius:5px}.hamburger__line:not(:last-child){margin-bottom:3px}.hero{position:relative}.hero::after{content:"";position:absolute;right:-600px;top:80px;width:742px;height:602px;border-radius:49px;background:-webkit-gradient(linear,left top,left bottom,from(#f2f6ff),color-stop(#f2f6ff),to(#fff));background:-o-linear-gradient(#f2f6ff,#f2f6ff,#fff);background:linear-gradient(#f2f6ff,#f2f6ff,#fff);-webkit-box-shadow:50px 50px 50px rgba(171,182,204,.2);box-shadow:50px 50px 50px rgba(171,182,204,.2);-webkit-transform:rotate(-315deg);-ms-transform:rotate(-315deg);transform:rotate(-315deg);z-index:-1}.hero__wrapper{display:grid;grid-template-columns:1fr 1fr}.hero__main{max-width:650px;margin-top:230px}.hero__subtitle,.hero__title{font-size:1.875rem;font-weight:400;line-height:2.375rem;margin-bottom:29px}.hero__title{font-size:4.375rem;line-height:3.9375rem;color:#23233c}.hero__description{font-size:1.5625rem;line-height:1.75rem;margin-bottom:47px}.hero__download{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:167px}.hero__btn{margin-right:90px}.hero .text-green{display:block}.hero__img-wrapper{position:relative;padding-top:220px}.hero__img-wrapper::after{background:#d0f0d6;content:"";position:absolute;width:409px;height:409px;left:-60px;top:300px;border-radius:50%;z-index:-1}.hero__img{position:absolute}.hero__img_login{left:0;border-radius:30px;-webkit-box-shadow:0 0 99px rgba(42,90,123,.23);box-shadow:0 0 99px rgba(42,90,123,.23)}.hero__img_activity{right:0;bottom:-30px;border-radius:30px;-webkit-box-shadow:0 3px 99px rgba(42,90,123,.23);box-shadow:0 3px 99px rgba(42,90,123,.23)}.hero__img_info{left:140px}.hero__img_result{right:200px;bottom:110px}.platforms{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.platforms__link{font-size:0;cursor:pointer}.platforms__link:first-child{margin-right:45px}.platforms__link:hover svg path{fill:#6cc57c}.social-links{display:-webkit-box;display:-ms-flexbox;display:flex}.social-links__link{position:relative}.social-links__link:not(:last-child){margin-right:42px}.social-links__link:not(:last-child)::after{content:"/";position:absolute;right:-24px}.social-links__link:hover{color:#6cc57c}.healthy-food{position:relative;padding:250px 0 100px}.healthy-food::before{content:"";position:absolute;left:-600px;bottom:-280px;width:742px;height:602px;border-radius:49px;background:-webkit-gradient(linear,left top,left bottom,from(#f2f6ff),color-stop(#f2f6ff),to(#fff));background:-o-linear-gradient(#f2f6ff,#f2f6ff,#fff);background:linear-gradient(#f2f6ff,#f2f6ff,#fff);-webkit-box-shadow:50px 50px 50px rgba(171,182,204,.2);box-shadow:50px 50px 50px rgba(171,182,204,.2);-webkit-transform:rotate(-145deg);-ms-transform:rotate(-145deg);transform:rotate(-145deg);z-index:-1}.healthy-food::after{background:#d0f0d6;content:"";position:absolute;width:300px;height:300px;border-radius:50%;top:50%;right:-220px;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.healthy-food .row{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-column-gap:50px;-moz-column-gap:50px;column-gap:50px}.dishes,.dishes__item{display:-webkit-box;display:-ms-flexbox;display:flex}.dishes__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative;min-width:306px;padding:220px 45px 75px;border-radius:153px 153px 50px 50px;background:-o-linear-gradient(315deg,#f2f6ff,#f2f6ff 60%,#fff);background:linear-gradient(135deg,#f2f6ff,#f2f6ff 60%,#fff);-webkit-box-shadow:50px 50px 50px rgba(171,182,204,.2);box-shadow:50px 50px 50px rgba(171,182,204,.2)}.dishes__item:first-child{margin-right:90px;top:-60px}.dishes__item:last-child{top:60px}.dishes__title{font-size:2.1875rem;line-height:2.375rem;color:#23233c;margin-bottom:16px}.dishes__info-col,.dishes__info-row{display:-webkit-box;display:-ms-flexbox;display:flex}.dishes__info-col{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.dishes__info-col:first-child{margin-right:45px}.dishes__number{font-size:1.625rem;line-height:2rem}.dishes__link{background:#23233c;position:absolute;right:-30px;bottom:-30px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:80px;height:80px;border-radius:50%;-webkit-transition:.1s ease-out;-o-transition:.1s ease-out;transition:.1s ease-out}.dishes__link:hover{background:#49497c}.dishes__img{position:absolute;left:0;top:-90px}.information{position:relative;padding:50px 0 100px}.information::before{content:"";position:absolute;right:-200px;bottom:200px;width:742px;height:602px;border-radius:49px;background:-webkit-gradient(linear,left top,left bottom,from(#f2f6ff),color-stop(#f2f6ff),to(#fff));background:-o-linear-gradient(#f2f6ff,#f2f6ff,#fff);background:linear-gradient(#f2f6ff,#f2f6ff,#fff);-webkit-box-shadow:50px 50px 50px rgba(171,182,204,.2);box-shadow:50px 50px 50px rgba(171,182,204,.2);-webkit-transform:rotate(342deg);-ms-transform:rotate(342deg);transform:rotate(342deg);z-index:-1}.information .col:first-child{max-width:615px}.information .row{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-column-gap:50px;-moz-column-gap:50px;column-gap:50px}.footer{padding:50px 0}.footer__logo,.footer__social-link svg{-webkit-transition:.1s ease-out;-o-transition:.1s ease-out;transition:.1s ease-out}.footer__logo:hover{opacity:.7}.footer__info{display:grid;grid-template-columns:repeat(4,1fr);margin-bottom:60px}.footer__nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.footer__nav-link{font-size:1.25rem;line-height:2.375rem}.footer__nav-link:not(:last-child){margin-bottom:18px}.footer__nav-link:hover{color:#6cc57c}.footer__socials-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__socials{font-size:0;margin-bottom:20px}.footer__social-link{display:inline-block}.footer__social-link:not(:last-child){margin-right:45px}.footer__social-link:hover svg{opacity:.6}.footer__app-text{font-size:1.25rem;color:#23233c}.footer__copyright-text{font-size:1.25rem}@media (min-width:1101px){.hero__img-group{display:none}}@media (max-width:1366px){.healthy-food::after,.healthy-food::before,.hero::after,.information::before{display:none}.hero__main{max-width:400px}.hero__btn{margin-right:20px;padding:10px 20px}.platforms__link:first-child{margin-right:25px}}@media (max-width:1100px){.hero__download{margin-bottom:50px}.hero__img{display:none}.healthy-food{padding:100px 0}.dishes__item{min-width:auto}.footer__info{grid-template-columns:1fr 1fr;row-gap:40px}}@media (max-width:992px){.section__title{font-size:3rem;line-height:3rem;margin-bottom:40px}.section__text{font-size:1.25rem}.header{top:20px}.header__wrapper{grid-template-columns:auto 1fr}.header__navigation{position:absolute;top:100%;background-color:#7f8da0;padding:20px 0;visibility:hidden;opacity:0}.header__navigation.opened{opacity:1;visibility:visible}.header__navigation,.main-nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.main-nav__link:not(:last-child){margin-right:0}.main-nav__link{color:#fff;margin-bottom:8px}.authorization{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-left:0}.authorization__link:not(:last-child){margin-right:0;margin-bottom:8px}.authorization__link{color:#fff}.hamburger{display:block;margin-left:auto}.hero__subtitle{font-size:1.25rem}.hero__title{font-size:3rem;line-height:3rem}.hero__description{font-size:1.25rem}.healthy-food .row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.healthy-food .row .col:first-child{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.dishes{padding-top:100px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.dishes__item:first-child{top:0;margin-right:0;margin-bottom:150px}.dishes__item:last-child{top:0}.information{padding:50px 0 0}.information .row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}@media (max-width:768px){.hero__wrapper{grid-template-columns:1fr}.hero__main{margin-left:auto;margin-right:auto;text-align:center;margin-top:200px}.hero__subtitle.text-decor::after{left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.hero__download{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.hero__img-wrapper{padding-top:0}.hero__img-wrapper::after{display:none}.social-links{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.footer__info{grid-template-columns:1fr;row-gap:20px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */