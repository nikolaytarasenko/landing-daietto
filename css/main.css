/* Libs */

/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */

html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font: 1em monospace, monospace;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type=checkbox],
input[type=radio] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */

input[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* Utils */

@font-face {
  font-family: "GoogleSans";
  src: local("GoogleSans-Regular"), local("GoogleSans-Regular"), url("../font/GoogleSans-Regular.woff2") format("woff2"), url("../font/GoogleSans-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "GoogleSans";
  src: local("GoogleSans-Bold"), local("GoogleSans-Bold"), url("../font/GoogleSans-Bold.woff2") format("woff2"), url("../font/GoogleSans-Bold.woff") format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}

/* General */

* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

html {
  height: 100%;
  font-size: 16px;
}

body {
  background: #F2F6FF;
  height: 100%;
  font-family: "GoogleSans", sans-serif;
  color: #7F8DA0;
  overflow-x: hidden;
}

.wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
}

.container {
  margin: 0 auto;
  padding: 0 15px;
  max-width: 1440px;
  width: 100%;
}

a {
  color: #7F8DA0;
  text-decoration: none;
  -webkit-transition: 0.15s ease-out;
  -o-transition: 0.15s ease-out;
  transition: 0.15s ease-out;
}

a:hover {
  color: #23233C;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
}

.section__title {
  font-size: 3.125rem;
  line-height: 4rem;
  font-weight: 400;
  color: #23233C;
  margin-bottom: 72px;
}

.section__text {
  max-width: 615px;
  font-size: 1.5625rem;
  line-height: 1.75rem;
}

.btn {
  font-size: 1.25rem;
  font-weight: 700;
  padding: 21px 68px;
}

.btn_black {
  background: #23233C;
  color: #FFFFFF;
  border-radius: 10px;
}

.btn_black:hover {
  background: #49497c;
  color: #FFFFFF;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.col {
  padding: 0 15px;
}

.text-green {
  color: #6CC57C;
}

.text-red {
  color: #EE6A6E;
}

.text-black {
  color: #23233C;
}

.text-decor {
  position: relative;
}

.text-decor::after {
  background: #23233C;
  content: "";
  position: absolute;
  left: 0;
  top: -28px;
  width: 62px;
  height: 8px;
  border-radius: 5px;
}

/* Blocks */

.header {
  position: fixed;
  top: 0;
  padding: 40px 0;
  width: 100%;
  z-index: 99;
  -webkit-transition: 0.3s;
  -o-transition: 0.3s;
  transition: 0.3s;
}

.header.sticky {
  background: #FFFFFF;
  padding: 15px 0;
  -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
}

.header__wrapper {
  display: grid;
  grid-template-columns: auto 1fr auto;
  justify-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.header__navigation {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  width: 100%;
  -webkit-transition: 0.2s ease-out;
  -o-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}

.logo {
  -webkit-transition: 0.1s ease-out;
  -o-transition: 0.1s ease-out;
  transition: 0.1s ease-out;
}

.logo:hover {
  opacity: 0.7;
}

.main-nav__link:not(:last-child) {
  margin-right: 66px;
}

.authorization {
  margin-left: 150px;
}

.authorization__link {
  color: #23233C;
}

.authorization__link:not(:last-child) {
  margin-right: 54px;
}

.authorization__link:hover {
  color: #6CC57C;
}

.hamburger {
  display: none;
  cursor: pointer;
  background: transparent;
  border: none;
}

.hamburger__line {
  background: #23233C;
  display: block;
  width: 26px;
  height: 3px;
  border-radius: 5px;
}

.hamburger__line:not(:last-child) {
  margin-bottom: 3px;
}

.hero {
  position: relative;
}

.hero::after {
  content: "";
  position: absolute;
  right: -600px;
  top: 80px;
  width: 742px;
  height: 602px;
  border-radius: 49px;
  background: -webkit-gradient(linear, left top, left bottom, from(#F2F6FF), color-stop(#F2F6FF), to(#FFFFFF));
  background: -o-linear-gradient(#F2F6FF, #F2F6FF, #FFFFFF);
  background: linear-gradient(#F2F6FF, #F2F6FF, #FFFFFF);
  -webkit-box-shadow: 50px 50px 50px rgba(171, 182, 204, 0.2);
  box-shadow: 50px 50px 50px rgba(171, 182, 204, 0.2);
  -webkit-transform: rotate(-315deg);
  -ms-transform: rotate(-315deg);
  transform: rotate(-315deg);
  z-index: -1;
}

.hero__wrapper {
  display: grid;
  grid-template-columns: 1fr 1fr;
}

.hero__main {
  max-width: 650px;
  margin-top: 230px;
}

.hero__subtitle {
  font-size: 1.875rem;
  font-weight: 400;
  line-height: 2.375rem;
  margin-bottom: 29px;
}

.hero__title {
  font-size: 4.375rem;
  font-weight: 400;
  line-height: 3.9375rem;
  color: #23233C;
  margin-bottom: 29px;
}

.hero__description {
  font-size: 1.5625rem;
  line-height: 1.75rem;
  margin-bottom: 47px;
}

.hero__download {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 167px;
}

.hero__btn {
  margin-right: 90px;
}

.hero .text-green {
  display: block;
}

.hero__img-wrapper {
  position: relative;
  padding-top: 220px;
}

.hero__img-wrapper::after {
  background: #D0F0D6;
  content: "";
  position: absolute;
  width: 409px;
  height: 409px;
  left: -60px;
  top: 300px;
  border-radius: 50%;
  z-index: -1;
}

.hero__img {
  position: absolute;
}

.hero__img_login {
  left: 0;
  border-radius: 30px;
  -webkit-box-shadow: 0 0 99px rgba(42, 90, 123, 0.23);
  box-shadow: 0 0 99px rgba(42, 90, 123, 0.23);
}

.hero__img_activity {
  right: 0;
  bottom: -30px;
  border-radius: 30px;
  -webkit-box-shadow: 0 3px 99px rgba(42, 90, 123, 0.23);
  box-shadow: 0 3px 99px rgba(42, 90, 123, 0.23);
}

.hero__img_info {
  left: 140px;
}

.hero__img_result {
  right: 200px;
  bottom: 110px;
}

.platforms {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.platforms__link {
  font-size: 0;
  cursor: pointer;
}

.platforms__link:first-child {
  margin-right: 45px;
}

.platforms__link:hover svg path {
  fill: #6CC57C;
}

.platforms__link svg path {
  -webkit-transition: 0.1s ease-out;
  -o-transition: 0.1s ease-out;
  transition: 0.1s ease-out;
}

.social-links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.social-links__link {
  position: relative;
}

.social-links__link:not(:last-child) {
  margin-right: 42px;
}

.social-links__link:not(:last-child)::after {
  content: "/";
  position: absolute;
  right: -24px;
}

.social-links__link:hover {
  color: #6CC57C;
}

.healthy-food {
  position: relative;
  padding: 250px 0 100px;
}

.healthy-food::before {
  content: "";
  position: absolute;
  left: -600px;
  bottom: -280px;
  width: 742px;
  height: 602px;
  border-radius: 49px;
  background: -webkit-gradient(linear, left top, left bottom, from(#F2F6FF), color-stop(#F2F6FF), to(#FFFFFF));
  background: -o-linear-gradient(#F2F6FF, #F2F6FF, #FFFFFF);
  background: linear-gradient(#F2F6FF, #F2F6FF, #FFFFFF);
  -webkit-box-shadow: 50px 50px 50px rgba(171, 182, 204, 0.2);
  box-shadow: 50px 50px 50px rgba(171, 182, 204, 0.2);
  -webkit-transform: rotate(-145deg);
  -ms-transform: rotate(-145deg);
  transform: rotate(-145deg);
  z-index: -1;
}

.healthy-food::after {
  background: #D0F0D6;
  content: "";
  position: absolute;
  width: 300px;
  height: 300px;
  border-radius: 50%;
  top: 50%;
  right: -220px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.healthy-food .row {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-column-gap: 50px;
  -moz-column-gap: 50px;
  column-gap: 50px;
}

.dishes {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.dishes__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
  min-width: 306px;
  padding: 220px 45px 75px;
  border-radius: 153px 153px 50px 50px;
  background: -o-linear-gradient(315deg, #F2F6FF, #F2F6FF 60%, #FFFFFF);
  background: linear-gradient(135deg, #F2F6FF, #F2F6FF 60%, #FFFFFF);
  -webkit-box-shadow: 50px 50px 50px rgba(171, 182, 204, 0.2);
  box-shadow: 50px 50px 50px rgba(171, 182, 204, 0.2);
}

.dishes__item:first-child {
  margin-right: 90px;
  top: -60px;
}

.dishes__item:last-child {
  top: 60px;
}

.dishes__title {
  font-size: 2.1875rem;
  line-height: 2.375rem;
  color: #23233C;
  margin-bottom: 16px;
}

.dishes__info-row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.dishes__info-col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.dishes__info-col:first-child {
  margin-right: 45px;
}

.dishes__number {
  font-size: 1.625rem;
  line-height: 2rem;
}

.dishes__link {
  background: #23233C;
  position: absolute;
  right: -30px;
  bottom: -30px;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 80px;
  height: 80px;
  border-radius: 50%;
  -webkit-transition: 0.1s ease-out;
  -o-transition: 0.1s ease-out;
  transition: 0.1s ease-out;
}

.dishes__link:hover {
  background: #49497c;
}

.dishes__img {
  position: absolute;
  left: 0;
  top: -90px;
}

.information {
  position: relative;
  padding: 50px 0 100px;
}

.information::before {
  content: "";
  position: absolute;
  right: -200px;
  bottom: 200px;
  width: 742px;
  height: 602px;
  border-radius: 49px;
  background: -webkit-gradient(linear, left top, left bottom, from(#F2F6FF), color-stop(#F2F6FF), to(#FFFFFF));
  background: -o-linear-gradient(#F2F6FF, #F2F6FF, #FFFFFF);
  background: linear-gradient(#F2F6FF, #F2F6FF, #FFFFFF);
  -webkit-box-shadow: 50px 50px 50px rgba(171, 182, 204, 0.2);
  box-shadow: 50px 50px 50px rgba(171, 182, 204, 0.2);
  -webkit-transform: rotate(342deg);
  -ms-transform: rotate(342deg);
  transform: rotate(342deg);
  z-index: -1;
}

.information .col:first-child {
  max-width: 615px;
}

.information .row {
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-column-gap: 50px;
  -moz-column-gap: 50px;
  column-gap: 50px;
}

.footer {
  padding: 50px 0;
}

.footer__logo {
  -webkit-transition: 0.1s ease-out;
  -o-transition: 0.1s ease-out;
  transition: 0.1s ease-out;
}

.footer__logo:hover {
  opacity: 0.7;
}

.footer__info {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  margin-bottom: 60px;
}

.footer__nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.footer__nav-link {
  font-size: 1.25rem;
  line-height: 2.375rem;
}

.footer__nav-link:not(:last-child) {
  margin-bottom: 18px;
}

.footer__nav-link:hover {
  color: #6CC57C;
}

.footer__socials-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.footer__socials {
  font-size: 0;
  margin-bottom: 20px;
}

.footer__social-link {
  display: inline-block;
}

.footer__social-link:not(:last-child) {
  margin-right: 45px;
}

.footer__social-link svg {
  -webkit-transition: 0.1s ease-out;
  -o-transition: 0.1s ease-out;
  transition: 0.1s ease-out;
}

.footer__social-link:hover svg {
  opacity: 0.6;
}

.footer__app-text {
  font-size: 1.25rem;
  color: #23233C;
}

.footer__copyright-text {
  font-size: 1.25rem;
}

@media (min-width: 1101px) {
  .hero__img-group {
    display: none;
  }
}

@media (max-width: 1366px) {
  .hero::after {
    display: none;
  }

  .hero__main {
    max-width: 400px;
  }

  .hero__btn {
    margin-right: 20px;
    padding: 10px 20px;
  }

  .platforms__link:first-child {
    margin-right: 25px;
  }

  .healthy-food::before {
    display: none;
  }

  .healthy-food::after {
    display: none;
  }

  .information::before {
    display: none;
  }
}

@media (max-width: 1100px) {
  .hero__download {
    margin-bottom: 50px;
  }

  .hero__img {
    display: none;
  }

  .healthy-food {
    padding: 100px 0;
  }

  .dishes__item {
    min-width: auto;
  }

  .footer__info {
    grid-template-columns: 1fr 1fr;
    row-gap: 40px;
  }
}

@media (max-width: 992px) {
  .section__title {
    font-size: 3rem;
    line-height: 3rem;
    margin-bottom: 40px;
  }

  .section__text {
    font-size: 1.25rem;
  }

  .header__wrapper {
    grid-template-columns: auto 1fr;
  }

  .header__navigation {
    position: absolute;
    top: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    background-color: #7F8DA0;
    padding: 20px 0;
    visibility: hidden;
    opacity: 0;
  }

  .header__navigation.opened {
    opacity: 1;
    visibility: visible;
  }

  .main-nav {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }

  .main-nav__link:not(:last-child) {
    margin-right: 0;
  }

  .main-nav__link {
    color: #FFFFFF;
    margin-bottom: 8px;
  }

  .authorization {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    margin-left: 0;
  }

  .authorization__link:not(:last-child) {
    margin-right: 0;
    margin-bottom: 8px;
  }

  .authorization__link {
    color: #FFFFFF;
  }

  .hamburger {
    display: block;
    margin-left: auto;
  }

  .hero__subtitle {
    font-size: 1.25rem;
  }

  .hero__title {
    font-size: 3rem;
    line-height: 3rem;
  }

  .hero__description {
    font-size: 1.25rem;
  }

  .healthy-food .row {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }

  .healthy-food .row .col:first-child {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }

  .dishes {
    padding-top: 100px;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }

  .dishes__item:first-child {
    top: 0;
    margin-right: 0;
    margin-bottom: 150px;
  }

  .dishes__item:last-child {
    top: 0;
  }

  .information {
    padding: 50px 0 0;
  }

  .information .row {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width: 768px) {
  .hero__wrapper {
    grid-template-columns: 1fr;
  }

  .hero__main {
    margin-left: auto;
    margin-right: auto;
    text-align: center;
    margin-top: 200px;
  }

  .hero__subtitle.text-decor::after {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translateX(-50%);
  }

  .hero__download {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }

  .hero__img-wrapper {
    padding-top: 0;
  }

  .hero__img-wrapper::after {
    display: none;
  }

  .social-links {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }

  .footer__info {
    grid-template-columns: 1fr;
    row-gap: 20px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */